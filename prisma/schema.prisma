// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:1234@localhost:5432/Lakoe"
}

model User {
  id              Int              @id @default(autoincrement())
  username        String           @unique
  email           String           @unique
  password        String
  profile         Profile?
  Order           Order?
  TemplateMessage TemplateMessage?
  created_at      DateTime         @default(now())
  updated_at      DateTime         @updatedAt
}

model Profile {
  id           Int      @id @default(autoincrement())
  fullname     String?
  address      String?
  phone_number String?
  user         User     @relation(fields: [userId], references: [id])
  userId       Int      @unique
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}

model Order {
  id            Int             @id @default(autoincrement())
  status        String?
  invoice       String?
  quantity      String?
  product       Product         @relation(fields: [productId], references: [id])
  productId     Int             @unique
  user          User            @relation(fields: [userId], references: [id])
  userId        Int             @unique
  Product_Order Product_Order[]
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
}

model Product_Order {
  id         Int      @id @default(autoincrement())
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  order      Order    @relation(fields: [orderId], references: [id])
  orderId    Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Product {
  id              Int              @id @default(autoincrement())
  product_name    String
  price           Int
  stock           Int
  url_product     String
  sku             String?          @unique
  description     String?
  weight          Float
  long            Float?
  width           Float?
  height          Float?
  TemplateMessage TemplateMessage?
  ProductImage    ProductImage[]
  Order           Order?
  Product_Order   Product_Order[]
  created_at      DateTime         @default(now())
  updated_at      DateTime         @updatedAt
}

model ProductImage {
  id         Int      @id @default(autoincrement())
  image      Product  @relation(fields: [productId], references: [id])
  productId  Int      @unique
  updated_at DateTime @updatedAt
}

model InformationSetting {
  id              Int              @id @default(autoincrement())
  store_name      String?
  description     String?
  slogan          String?
  image           String?
  TemplateMessage TemplateMessage?
  created_at      DateTime         @default(now())
  updated_at      DateTime         @updatedAt
}

model LocationSetting {
  id            Int      @id @default(autoincrement())
  location_name String?
  address       String?
  district      String?
  postcode      String
  longitude     Float?
  latitude      Float?
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
}

model TemplateMessage {
  id           Int                @id @default(autoincrement())
  title        String
  description  String
  product      Product            @relation(fields: [productId], references: [id])
  productId    Int                @unique
  customer     User               @relation(fields: [customerId], references: [id])
  customerId   Int                @unique
  store_name   InformationSetting @relation(fields: [store_nameId], references: [id])
  store_nameId Int                @unique
}
